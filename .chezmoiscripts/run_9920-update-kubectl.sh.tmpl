#!/usr/bin/env sh
{{- if index . "kubectl" }}
if command -v kubectl &> /dev/null; then
    current=$(kubectl version --short --client | cut -d " " -f 3)
else
    current=""
fi
stable=$(curl -L -s https://dl.k8s.io/release/stable.txt)

if [[ $current == $stable ]];then
    {{ template "skip" -}}
    {{ template "emph" .chezmoi.sourceFile }}
    printf ". Latest version of "
    {{ template "emph" "kubectl" }}
    printf " is installed.\n"
    exit 0
fi

{{ template "info" -}}
printf "Downloading "
{{ template "emph" "kubectl" -}}
printf ".\n"

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(<kubectl.sha256) kubectl" | sha256sum --check
ret=$?
if [ $ret -ne 0 ];then
    {{ template "error" -}}
    printf " checksum for "
    {{ template "emph" "kubectl" -}}
    printf "did not match. Aborting\n"
    exit 1
fi
{{ template "info" }}
printf " Installing "
{{ template "emph" "kubectl" }}
printf ". Requires escalated permissions."
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
rm kubectl
rm kubectl.sha256

{{ template "sh-opt-command" "yq" -}}
if command -v yq &> /dev/null; then
yq e -i '.lastupdated.kubectl = {{ now | unixEpoch }}' {{ joinPath .xdg.config "chezmoi/chezmoi.yaml"}}
fi
{{ else }}
   {{ template "skip" -}}
   {{ template "emph" .chezmoi.sourceFile -}}
   printf " is disabled.\n"
{{- end }}
