{{ if (eq .zsh.prompt "starship") }}
if command -v starship &> /dev/null; then
   eval "$(starship init zsh)"
fi
{{ else if (eq .zsh.prompt "p10k") }}
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r {{ joinPath .xdg.cache "/p10k-instant-prompt-${(%):-%n}.zsh" | quote }} ]]; then
   source  {{ joinPath .xdg.cache "/p10k-instant-prompt-${(%):-%n}.zsh" | quote }}
fi
{{ end }}
HISTFILE=~/.cache/histfile
HISTSIZE=10000
SAVEHIST=10000

## Keybindings section
bindkey -e
bindkey '^[[7~' beginning-of-line                               # Home key
bindkey '^[[H' beginning-of-line                                # Home key
if [[ "${terminfo[khome]}" != "" ]]; then
  bindkey "${terminfo[khome]}" beginning-of-line                # [Home] - Go to beginning of line
fi
bindkey '^[[8~' end-of-line                                     # End key
bindkey '^[[F' end-of-line                                     # End key
if [[ "${terminfo[kend]}" != "" ]]; then
  bindkey "${terminfo[kend]}" end-of-line                       # [End] - Go to end of line
fi
bindkey '^[[2~' overwrite-mode                                  # Insert key
bindkey '^[[3~' delete-char                                     # Delete key
bindkey '^[[C'  forward-char                                    # Right key
bindkey '^[[D'  backward-char                                   # Left key
bindkey '^[[5~' history-beginning-search-backward               # Page up key
bindkey '^[[6~' history-beginning-search-forward                # Page down key

# Navigate words with ctrl+arrow keys
bindkey '^[Oc' forward-word                                     #
bindkey '^[Od' backward-word                                    #
bindkey '^[[1;5D' backward-word                                 #
bindkey '^[[1;5C' forward-word                                  #
bindkey '^H' backward-kill-word                                 # delete previous word with ctrl+backspace
bindkey '^[[Z' undo                                             # Shift+tab undo last action

source {{ joinPath .xdg.data "/zinit/bin/zinit.zsh" | quote }}

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node \
### End of Zinit's installer chunk

{{ if (eq .zsh.prompt "starship") }}
zinit ice as"command" from"gh-r" \
    atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
    atpull"%atclone" src"init.zsh"
zinit light starship/starship
{{ else if (eq .zsh.prompt "p10k") }}
zinit ice depth=1
zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f {{ joinPath .xdg.config "/zsh/.p10k.zsh" | quote }} ]] || source {{ joinPath .xdg.config "/zsh/.p10k.zsh" | quote }}
{{ end }}

zinit light zdharma/history-search-multi-word

zinit light zdharma/fast-syntax-highlighting 

zinit light zsh-users/zsh-autosuggestions

zplugin light "zdharma/zsh-diff-so-fancy"

zinit ice wait lucid
zinit light olets/zsh-abbr

zinit ice blockf atpull'zinit creinstall -q .'
zinit light zsh-users/zsh-completions

zinit ice from"gh-r" as"program" mv"docker* -> docker-compose" bpick"*linux*"
zinit light docker/compose

zinit light-mode lucid wait has"kubectl" for \
  id-as"kubectl_completion" \
  as"completion" \
  atclone"kubectl completion zsh > _kubectl" \
  atpull"%atclone" \
  run-atpull \
  zdharma/null

zinit ice from"gh-r" as"program" \
  mv"octant*/octant -> octant" \
  bpick"*Linux-64bit*" \
  atclone"octant completion zsh > _octant" \
  atpull"%atclone"
zinit light vmware-tanzu/octant

zinit as"null" wait"1" lucid for \
    sbin    Fakerr/git-recall \
    sbin    cloneopts paulirish/git-open \
    sbin    paulirish/git-recent \
    sbin    davidosomething/git-my \
    sbin atload"export _MENU_THEME=legacy" \
  	    arzzen/git-quick-stats \
    sbin    iwata/git-now \
    make"PREFIX=$ZPFX install" \
            tj/git-extras \
    sbin"bin/git-dsf;bin/diff-so-fancy" \
	    zdharma/zsh-diff-so-fancy \
    sbin"git-url;git-guclone" make"GITURL_NO_CGITURL=1" \
            zdharma/git-url

zinit ice from"gh-r" as"program"
zinit light junegunn/fzf-bin

zinit ice as"command" wait lucid \
    atinit"export PYTHONPATH=$ZPFX/lib/python3.7/site-packages/" \
    atclone"PYTHONPATH=$ZPFX/lib/python3.7/site-packages/ \
    python3 setup.py --quiet install --prefix $ZPFX" \
    atpull'%atclone' test'0' \
    pick"$ZPFX/bin/asciinema"
zinit light asciinema/asciinema.git

zinit light-mode lucid wait has"chezmoi" for \
  id-as"chezmoi_completion" \
  as"completion" \
  atclone"chezmoi completion zsh > _chezmoi" \
  atpull"%atclone" \
  run-atpull \
  zdharma/null

zinit ice wait lucid \
  id-as"vk-kubectl-helpers"
zinit snippet {{ joinPath .chezmoi.sourceDir "etc/zsh/kubectl-helpers/my-kubectl-functions.zsh" | quote }}

autoload -Uz compinit
compinit

zinit cdreplay -q

export EDITOR={{ .editor | quote }}
